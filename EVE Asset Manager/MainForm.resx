<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolbar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>119, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAsAAAAXAAAAIQAAACcAAAApAAAAKgAAACoAAAAqAAAAKgAA
        ACoAAAApAAAAJwAAACQAAAAcAAAADwAAAAUALk4hAEl8aABVkbEAXJ7yAESG/wA/gf8AP4H/AD+B/wA/
        gf8AP4H/AD+B/wA/gf8AP4H/AD+B/wA1bUsAAAAEAF+daAV6uv8Pqt7/E8v5/wmT1P8Jk9T/CZPU/wmT
        1P8Jk9T/CZPU/wmT1P8Jk9T/CZPU/wNfpP8ARIdlAAAAAQBvtLAWlc3/BE+a/zLd//8Adcj/ACp2/wAq
        dv8AKnb/AHXI/wB1yP8AKnb/ACp2/wxtsv8Md7r/AE+agAB8wxAAecD/GXy8/wBHm/9R5///AIXV/wA0
        h/8AUaL/ADSH/wCF1f8AhdX/ADSH/wBHmf8MWaP/GYzK/wBZqa8Ag8xfI6Xb/wZesf8AVKv/cPH//wCV
        4v8AP5r/AD+a/wA/mv8AWqL/AEaM/wBFkP8AP5r/AD+a/yqh2f8AYra/AIzWr1rR7/+P+///j/v//4/7
        //9Hwur/R8Lq/0fC6v9Hwur/AF6u/wKM2f8AW6v/R8Lq/0fC6v9DvOf/AGzE/wCV4f8AleH/AJXh/wCV
        4f8AleH/AHbT/wB20/8AdtP/AHbT/wBxzP8Accz/AHHM/wB20/8AdtP/AHbT/wB20/8AZ6yfAV2j/wyk
        3P8BUqP/AEmd/wBJnf8ASZ3/AEmd/wBJnf8ASZ3/AEmd/wBJnf8ASZ3/AEicnwAAAAAAAAAAAG60nwBd
        pv8FV6L/A4PL/wBAkf8AQJH/AECR/wBAkf8AQJH/AECR/wBAkf8AQJH/AECR/wBAkf8AP5CfAAAAAAB6
        wV8AZrL/AEea/wBvvP8Ab7b/ADaE/wA2hP8ANoT/ADaE/wA2hP8ANoT/ADaE/wA2hP8ANoT/ADaE/wA1
        g58Ag8vfAFes/wBnt/8Avvb/Odr8/3Dt/f9q7P3/Zen9/2Do/f9a5v3/VeT9/0/i/f9K4P3/V+f+/1jo
        //8hrODfAIrUnwmDzf9+5vX/j/v//4Xx+v8RcbT/AF2p/0mr0v+P+///hfH6/xFxtP8AXan/SavS/zO1
        5v8AjNb/AIvVXwAAAAAAlN+fAJXh/wCV4f8Afsn/AHjC/wCBzP8AleH/AJXh/wB+yf8AeML/AIHM/wCV
        4f8AlN+fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAB
        AAAAAAAAAAAAAAAAAACAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAACAAAAAgAA
        AAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAIAAAACAAAAAgAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAUAAAAJAAAADQAA
        AA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAA
        AA8AAAAPAAAADwAAAA8AAAAOAAAACwAAAAYAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAUAAAALAAAAFAAA
        AB8AAAAnAAAAKwAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAA
        ACwAAAAsAAAALAAAACwAAAAsAAAAKwAAACcAAAAeAAAADwAAAAQAAAAAAAAAAQAAAAQAAAAKAAAAFAAA
        ACEAAAAvAENzggBXl+YAQYP/AD1+/wA9fv8APX7/AD1+/wA9fv8APX7/AD1+/wA9fv8APX7/AD1+/wA9
        fv8APX7/AD1+/wA9fv8APX7/AD1+/wA9fv8APX7/AD1+/wA9fv8AMmlMAAAABgAAAAAAAAADAAAADAAA
        ABwAAAAsAEZ4ggBbnOcEiMT/CMDz/wSN0P8EjdD/BI3Q/wSN0P8EjdD/BI3Q/wSN0P8EjdD/BI3Q/wSN
        0P8EjdD/BI3Q/wSN0P8EjdD/BI3Q/wSN0P8EjdD/BI3Q/wSN0P8EjdD/AVib/wA9e2YAAAADAAAAAQAA
        AAYAAAAUAFCGeABgouUJjcf/E8Xz/w/F+f8V0///AGy+/wAlbP8AJWz/ACVs/wAlbP8AJWz/AGy+/wBs
        vv8AJWz/ACVs/wAlbP8AJWz/ACVs/wAlbP8AbL7/AGy+/wAlbP8AJWz/ACVs/wVttP8Fa67/AEOIgQAA
        AAEAAAAAAAAABABalUkEdrb/Hsn0/xak2f8Ha6//ADyK/yLX//8AccP/AChy/wA4g/8AOIP/ADiD/wAo
        cv8AccP/AHHD/wAocv8AOIP/ADiD/wA4g/8AOIP/AChy/wBxw/8AccP/AChy/wA4g/8AL3n/Bluh/wp6
        u/8ASZCvAAAAAAAAAAAAAAABAGquchSd0/8crN//ADyL/wBGlP8AOon/L9v//wB2yP8AK3f/AD6K/wA+
        iv8APor/ACt3/wB2yP8Adsj/ACt3/wA+iv8APor/AD6K/wA+iv8AK3f/AHbI/wB2yP8AK3f/AD6K/wA3
        g/8FTJT/EYjH/wBNl78AAAAAAAAAAAAAAAAAcbePIq/f/xqLxf8ASpj/AFaj/wA+jv883///AHvM/wAu
        ff8AQ5L/AEOS/wBDkv8ALn3/AHvM/wB7zP8ALn3/AEOS/wBDkv8AQ5L/AEOS/wAuff8Ae8z/AHvM/wAu
        ff8AQ5L/AD+O/wE6iP8cnNf/AFGe/wAAAAAAAAAAAAAAAAB2vb82ye7/Emuu/wBXpP8AXqr/AEKU/0jk
        //8AgdH/ADGD/wBJmf8ASZn/AEmZ/wAxg/8AgdH/AIHR/wAxg/8ASZn/AEmZ/wBJmf8ASZn/ADGD/wCB
        0f8AgdH/ADGD/wBJmf8ASZn/ADGD/yGf2P8AVqT/AFinDwAAAAAAAAAAAHvC/1Xo//8ARpr/AGay/wBm
        sv8ARpr/Vej//wCG1v8ANYn/AE+g/6ZnUf/MbD3/zGw9/8xsPf+mclv/ADWJ/wBPoP8AT6D/AE+g/wBP
        oP8ANYn/AIbW/wCG1v8ANYn/AE+g/wBPoP8AO4//H47K/wpvuP8AW6s/AAAAAACByR8Mjc7/SsTn/wBT
        pf8Ab7r/AG+6/wBKn/9j7P//AIvb/wA5j/+maFL/25Ju//jp4f/bkm7/04FZ/8xsPf+mY07/AFWo/wBV
        qP8AVaj/AFGh/wA5j/8Ai9v/AIvb/wA5j/8AVaj/AFWo/wBFmv8Ydbn/D3nB/wBgsl8AAAAAAITNTyOm
        3P83n9H/AGKz/wB3wf8Ad8H/AE6k/2/w//8AkuD/ADyV/9uSbv/mr5T/4qB//+Kgf//bkm7/+Onh/9eG
        Xv8AWq3/AEiQ/wBBhf8AQYX/AECK/wCN2v8AkuD/ADyV/wBbsP8AW7D/AFCm/xFirv8bjc//AGS5fwAA
        AAAAidJ/Pr7o/x97v/8AdMH/AH/J/wB/yf8AU6r/fPT//wCX5f8AP5z/3ZZz/+Kgf//dlnP/AD+c/9B1
        Sf/MbD3/0HVJ/wBSn/8Kc7b/EJnY/xCZ2P8Kc7b/AGCr/wCX5f8AP5z/AGG3/wBht/8AW7L/B0+m/yed
        2f8AacCvAAAAAACN2K9e1/L/AFew/wBXsP8AV7D/AFew/wBXsP+J+f//AJ3q/wBDov/bkm7/+Onh/9eG
        Xv8AQ6L/25Ju//jp4f/Xhl7/A16s/yqr4P8Ci9j/AovY/yqr4P8AWan/AJ3q/wBDov8AQ6L/AEOi/wBD
        ov8AQ6L/M6zi/wBtx78AAAAAAJLd34Pw+v+W/f//lv3//5b9//+W/f//lv3//5b9//9Kx+7/Ssfu/92W
        c//ioH//3ZZz/0rH7v/QdUn/zGw9/9B1Sf8DbL//Prjk/0O95/9Dvef/Prjk/wBmvf9Buuf/Ssfu/0rH
        7v9Kx+7/Ssfu/0rH7v9Gwuv/AHPO/wAAAAAAl+P/AJfj/wCX4/8Al+P/AJfj/wCX4/8Al+P/AJfj/wB4
        1v8AeNb/25Ju//jp4f/Xhl7/AHjW/9uSbv/46eH/14Ze/wB10v8AddH/AHXR/wB10f8AddH/AHXS/wB4
        1v8AeNb/AHjW/wB41v8AeNb/AHjW/wB41v8AeNb/AGCjnwSJxP8Jz///BYjN/wBQpv8AU6f/A2it/xi3
        6/8Yt+v/E5bP/xi36/+9pJL/4qB//72kkv8Yt+v/vaSS/+Kgf/+9pJL/GLfr/xi36/8Yt+v/E5bP/xi3
        6/8Yt+v/E5bP/xi36/8Yt+v/AFyk/wAAAAAAAAAAAAAAAAAAAAAAZKjvE8X0/wix8P8AnOf/AH7M/wBK
        n/8AXKr/AGm1/wp7wP8/ye//P8nv/z/J7/8/ye//H7Tq/yC06v86w+z/DoHE/wBptf8AabX/CnvA/z/J
        7/8/ye//H7Tq/yC06v86w+z/DoHE/wBptf8AZbCvAAAAAAAAAAAAAAAAAAAAAABprX8Nk8z/HL3s/wCG
        z/8Aoun/AIbR/wBLnf8ARZj/AGKz/wB2xv8Adsb/AHbG/xKJz/9l2/P/Zdvz/xeP0v8AYrP/AEWY/wBF
        mP8AYrP/AHbG/xKJz/9l2/P/Zdvz/xeP0v8AYrP/AEWY/wBFl+8ARJZfAAAAAAAAAAAAAAAAAG60PwyK
        xv8pvuj/ADmI/wB+x/8AqOz/AJXc/wBGl/8AQJH/AECR/wBAkf8AQJH/AGm7/wCE2P8AhNj/AGm7/wBA
        kf8AQJH/AECR/wBAkf8AQJH/AGm7/wCE2P8AhNj/AGm7/wBAkf8AQJH/AECR/wBAkf8APo9fAAAAAAAA
        AAAAdLpfGZzT/yik1f8AQpH/AEKR/wB2v/8Are//AJ/j/wBQnf8AOor/ADqK/wA6iv8AOor/ADqK/wA6
        iv8AOor/ADqK/wA6iv8AOor/ADqK/wA6iv8AOor/ADqK/wA6iv8AOor/ADqK/wA6iv8AOor/ADqK/wA6
        iv8AOYmfAAAAAAB5wI8nr9//J5XK/wBQn/8AW6j/AEWX/wCJz/8As/L/AKvr/wBNmP8ANYL/ADWC/wA1
        gv8ANYL/ADWC/wA1gv8ANYL/ADWC/wA1gv8ANYL/ADWC/wA1gv8ANYL/ADWC/wA1gv8ANYL/ADWC/wA1
        gv8ANYL/ADWC/wA1gv8ANIGfAH3Fv0bP8P8XcbX/AGSx/wBcq/8AXq3/ALn1/wC59f8AufX/ALn1/wC5
        9f8AufX/ALn1/wC59f8AufX/ALn1/wC59f8AufX/ALn1/wC59f8AufX/ALn1/wC59f8AufX/ALn1/wC5
        9f8AufX/ALn1/wC59f8iy/n/V+P7/wB9xe8Ag8vvZej7/wZYqv8Abrv/AFir/wCw7f8Avvj/F8n5/wC+
        +P+Z/v//lv3//5L8//+O+v//ivn//4f4//+D9///f/X//3z0//948///dPL//3Dw//9t7///ae7//2Xt
        //9i7P//Xur//1rp//9W6P//U+f//0/l//9Cxuv/AILLnwCH0d9i3/b/F3G6/wBTq/8AoeH/AMT7/yrU
        /P9h7P//FGWm/wA5iP8AOYj/ADmI/wBTnP8AxPv/AHa6/wA5iP8AOYj/ADmI/wA5iP8AU5z/AMT7/wB2
        uv8AOYj/ADmI/wA5iP8AOYj/F1yd/0PE6/8Ah9H/AIfR/wCH0f8Ah9BPAIzWjzq86P9dxub/EZfX/wDK
        /v8y2v7/dvP//yaJwv8AW6j/AF2p/wBXpP8ASpr/ALjw/wCf3f8ASJn/AFuo/wBdqf8AV6T/AEqa/wC4
        8P8An93/AEiZ/wBbqP8AXan/AFek/whNmv9czer/CJTZ7wCL1R8AAAAAAAAAAAAAAAAAkdwvCZnf/1zV
        8v+M9v3/lv3//4v6//8ui8T/AHC8/wB4wv8AdMD/AFOm/2fF4P+C5/P/CVem/wBwvP8AeML/AHTA/wBT
        pv9nxeD/gufz/wlXpv8AcLz/AHjC/wB0wP8AU6b/Xr/e/xum4/8AkdxPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAleFPAJbinwCW4u8Al+P/I4PG/wBVrf8AVa3/AFWt/wBVrf8AccT/AJfj/wBit/8AVa3/AFWt/wBV
        rf8AVa3/AHHE/wCX4/8AYrf/AFWt/wBVrf8AVa3/AFWt/wBxxP8Al+P/AJbijwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////wAAA/gAAAHgAAABwAAAAcAAAAHAAAABwAAAAcAA
        AAHAAAAAwAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAAAAAA8AAAAPAAAABwAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAcAAAAPgAAAH///////////
</value>
  </data>
</root>